mixin quot(comment)
  div.tq-cts
    div.tq-hdr
      div.tq-th(style='background-image: url(#{comment.sendUserThumbnail})')
      span.tq-pstr #{comment.sendUserName}
      span.tq-ts #{comment.timeOrDay}
    p.tq.tq-r #{comment.text} 
    p.tq.tq-r.translate #{comment.translate}

mixin body(bodyList)
  //- try get text length
  - var fontSizeClass = 'tp-r'
  - var isUrl = false
  each body in bodyList
    case body.bodyType
      when 1
        - isUrl = (body.text.indexOf('http') == 0)
        if body.text.length > 25
          - fontSizeClass = (isUrl?"tp-m":"tp-s")

  p(class="tp #{fontSizeClass}")
    each body in bodyList
      case body.bodyType
        when 1
          //- text
          if isUrl == true
            a(href='#{body.text}') #{body.text}
          else
            | #{body.text}

        when 2
          //- image
          <img class="tp_sgt" src=#{body.image}><br>

mixin body-single-image(bodyList)
  p(class="tp tp-r")
    each body in bodyList
      case body.bodyType
        when 1
          //- text
          - console.log("error: text in image only post")
        when 2
          //- image
          <img class="tp_sg" src=#{body.image}><br>
        when 3
          //- image
          <img class="tp_g" src=#{body.image}><br>

mixin body-translated(bodyList)
  //- try get text length
  - var fontSizeClass = 'tp-r'
  each body in bodyList
    case body.bodyType
      when 1
        if body.text.length > 25
          - fontSizeClass = "tp-s"

  p(class="tp #{fontSizeClass} translate")
    each body in bodyList
      case body.bodyType
        when 1
          //- text
          | #{body.translate}
        when 2
          //- image
          <img class="tp_sgt" src=#{body.image}><br>

mixin body-video(body)
  p.tp.tp-r
    <img class="tp_g" src=#{body.thumbnailUrl}><br>



doctype html
html
  head
    meta(charset='UTF-8')
    link(href='app.css',rel='stylesheet')
    style.
      .ltp .tp_g, .ltp .tp_m{
        max-width: 420px;
      }
      .tp.translate{
        color:#CF0011;
      }
      .tq-r.translate{
        color:#CF0011;
      }
      .box.ltp.bottom{
        padding:5px;
      }

  body
    div.col.col3--main
      div.panel.panel-nb.panel-md-latestPosts
        h2.ltp-heading 最新のトーク
        div.ltps
          ul.ltps-ul

            //- repeat start
            each post in posts
              li.box.ltp
                div.tp-hdr
                  div.tp-th(style='background-image: url(http://stat.7gogo.jp/appimg_images/20150705/12/79/zb/j/t02400240p.jpg);')
                  i.icn.icn-01.icn-tp-ofl
                  span.tp-pstr #{post.sendUserName}
                  span.tp-ts #{post.timeOrDay}

                case post.postType
                  when 1
                    //- text
                    +body(post.body)
                    +body-translated(post.body)

                  when 2
                    //- image
                    +body-single-image(post.body)

                  when 3
                    //- user upload image
                    +body-single-image(post.body)

                  when 4
                    //- retalk
                    +body(post.body)
                    +body-translated(post.body)
                    +quot(post.body[0].comment)

                  when 6
                    //- video
                    +body-video(post.body[0])
        
            li.box.ltp.bottom
              
              p.tp.tp-s 
                | 翻译: @根基挡炎爆 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

              p.tp.tp-s
                span.tp-ts
                  | #{(new Date()).toLocaleString()}
              p.tp.tp-s
                span.tp-ts Powered by hkt48-fan/haruppi-promotion-project@github
                







